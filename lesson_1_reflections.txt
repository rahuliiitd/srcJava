How did viewing a diff between two versions of a file help you see the bug that was introduced?

We discovered a typing mistake in the new file, that was not present in the older file.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
It lets me take a look at the course of development of the program.
That lets me compare the present logic to the older logic.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?
Automatic commit may not reflect each logical change. Further manual commit provides more flexibility.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Because Git was made while keeping it's suitability for use with programs.

How can you use the commands git log and git diff to view the history of files?
It shows the changes made to the files together with the time at which those changes were made.

How might using version control make you more confident to make changes that could break something?
Because it allows to revert back to a previous state easily.

Now that you have your workspace set up, what do you want to try using Git for?
Version control.
